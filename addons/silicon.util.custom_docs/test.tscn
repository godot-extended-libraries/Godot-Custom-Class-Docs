[gd_scene format=2]

[node name="Control" type="Control"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="RichTextLabel" type="RichTextLabel" parent="."]
margin_right = 447.0
margin_bottom = 330.0
text = "Class: JSON
Inherits: Object


	Helper class for parsing JSON data.


Description

	Helper class for parsing JSON data. For usage example and other important hints, see JSONParseResult.


Methods
	JSONParseResultparse(json: String)Stringprint(value: Variant, indent: String = \"\", sort_keys: bool = false)

Method Descriptions

JSONParseResult parse(json: String)

	Parses a JSON-encoded string and returns a JSONParseResult containing the result.


String print(value: Variant, indent: String = \"\", sort_keys: bool = false)

	Converts a Variant var to JSON text and returns the result. Useful for serializing data to store or send over the network.

Note: The JSON specification does not define integer or float types, but only a number type. Therefore, converting a Variant to JSON text will convert all numerical values to float types.

Use indent parameter to pretty print the output.

Example output:

## JSON.print(my_dictionary)
{\"name\":\"my_dictionary\",\"version\":\"1.0.0\",\"entities\":[{\"name\":\"entity_0\",\"value\":\"value_0\"},{\"name\":\"entity_1\",\"value\":\"value_1\"}]}

## JSON.print(my_dictionary, \"\\t\")
{
        \"name\": \"my_dictionary\",
        \"version\": \"1.0.0\",
        \"entities\": [
                {
                        \"name\": \"entity_0\",
                        \"value\": \"value_0\"
                },
                {
                        \"name\": \"entity_1\",
                        \"value\": \"value_1\"
                }
        ]
}


"
__meta__ = {
"_edit_use_anchors_": false
}
